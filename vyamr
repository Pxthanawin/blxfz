repeat task.wait() until game:IsLoaded()

local HttpService = game:GetService("HttpService")
local MessagingService = game:GetService("MessagingService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local GuiService = game:GetService("GuiService")
local VirtualUser = game:GetService("VirtualUser")
local tweenService = game:GetService("TweenService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local Workspace = game:GetService("Workspace")

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Backpack = LocalPlayer:WaitForChild("Backpack")
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

local Character = LocalPlayer.Character

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("SetTeam", "Pirates")
repeat
    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("SetTeam", "Pirates")
    task.wait()
until LocalPlayer:FindFirstChild("NextSpawn")

local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local Humanoid = Character.Humanoid

local Tween = function(pos)
    local Distance = (pos - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
    if Distance >= 2000 then
        Speed = 220
    else
        Speed = 330
    end
    tweenService, tweenInfo = game:GetService("TweenService"), TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear)
    tween = tweenService:Create(game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart, tweenInfo, {CFrame = CFrame.new(pos)})
    tween:Play()
    repeat task.wait() until (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - pos).Magnitude < 2
    task.wait()
end

local finditems = function(item)
    local getitems = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("getInventory")
    for _, v in pairs(getitems) do
        if v.Name == item then
            return true
        end
    end
end

if not finditems("Valkyrie Helm") then
    Tween(Vector3.new(-4977.73046875, 314.5505676269531, -3021.42529296875))
    local startTime = os.time()
    local duration = 5 * 60

    while os.time() - startTime < duration do
        if workspace.Enemies:FindFirstChild("rip_indra True Form") then

            Character = LocalPlayer.Character
            HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
            Humanoid = Character.Humanoid

            local environment, replicatedstorage, players, net, client, modulepath, characterfolder, enemyfolder do
                environment = (getgenv or getrenv or getfenv)()
                replicatedstorage = game:GetService("ReplicatedStorage")
                players = game:GetService("Players")
                client = players.LocalPlayer
                modulepath = replicatedstorage:WaitForChild("Modules")
                net = modulepath:WaitForChild("Net")
                characterfolder = workspace:WaitForChild("Characters")
                enemyfolder = workspace:WaitForChild("Enemies")
            end
            local Module = {}
            Module.AttackCooldown = .0
            local CachedChars = {}
            function Module.IsAlive(Char: Model?): boolean
                if not Char then
                    return nil
                end
                if CachedChars[Char] then
                    return CachedChars[Char].Health > 0
                end
                local Hum = Char:FindFirstChildOfClass("Humanoid")
                CachedChars[Char] = Hum
                return Hum and Hum.Health > 0
            end
            local Settings = {
                ClickDelay = .0,
                AutoClick = true
            }
            Module.FastAttack = (function()
                if environment._trash_attack then
                    return environment._trash_attack
                end
                local module = {
                    NextAttack = 0,
                    Distance = 100,
                    attackMobs = true,
                    attackPlayers = true
                }
                local RegisterAttack = net:WaitForChild("RE/RegisterAttack")
                local RegisterHit = net:WaitForChild("RE/RegisterHit")
                function module:AttackEnemy(EnemyHead, Table)
                    if EnemyHead and client:DistanceFromCharacter(EnemyHead.Position) < self.Distance then
                        if not self.FirstAttack then
                            RegisterAttack:FireServer(.0)
                            self.FirstAttack = true
                        end
                        RegisterHit:FireServer(EnemyHead, Table or {})
                    end
                end
                function module:AttackNearest()
                    local args = {
                        [1] = nil,
                        [2] = {}
                    }
                    for _, Enemy in enemyfolder:GetChildren() do
                        local HRP = Enemy:FindFirstChild("HumanoidRootPart", true)
                        if HRP and client:DistanceFromCharacter(HRP.Position) < self.Distance then
                            if not args[1] then
                                args[1] = Enemy:FindFirstChild("UpperTorso")
                            else
                                table.insert(args[2], {
                                    [1] = Enemy,
                                    [2] = Enemy:FindFirstChild("UpperTorso")
                                })
                            end
                        end
                    end
                    self:AttackEnemy(unpack(args))
                    for _, Enemy in characterfolder:GetChildren() do
                        if Enemy ~= client.Character then
                            self:AttackEnemy(Enemy:FindFirstChild("UpperTorso"))
                        end
                    end
                    if not self.FirstAttack then
                        task.wait(.0)
                    end
                end
                function module:BladeHits()
                    self:AttackNearest()
                    self.FirstAttack = false
                end
                task.spawn(function()
                    while game:GetService("RunService").Stepped:Wait() do
                        module:BladeHits()
                    end
                end)
                environment._trash_attack = module
                return module
            end)()

            Tween(workspace.Enemies["rip_indra True Form"].HumanoidRootPart.Position + Vector3.new(0, 20, 0))
            while workspace.Enemies:FindFirstChild("rip_indra True Form") do
                Character = LocalPlayer.Character
                HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
                Humanoid = Character.Humanoid
                for _, v in ipairs(Backpack:GetChildren()) do
                    if v:IsA("Tool") then
                        local tooltip = v.ToolTip
                        if tooltip == "Melee" then
                            Humanoid:EquipTool(v)
                        end
                    end
                end
                HumanoidRootPart.CFrame = CFrame.new(workspace.Enemies["rip_indra True Form"].HumanoidRootPart.Position + Vector3.new(0, 20, 0))
                game:GetService("RunService").Stepped:Wait()
            end
            return
        end
        task.wait(1)
    end

    local tpservice = game:GetService("TeleportService")
    tpservice:Teleport(7449423635, game.Players.LocalPlayer)
end
if finditems("Mirror Fractal") then

end
